package playtestApp;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.JTextField;
import javax.swing.JButton;
import javax.swing.JLabel;

public class TimerEditor extends JFrame {

	private JPanel contentPane;
	private JTextField txtTimer;

	private PlaytestScreen parent;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					TimerEditor frame = new TimerEditor();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	// Create a constructor overload which takes in elapsedTime
	// and sets the text of txtTimer to the elapsedTime
	// This will be used when the user clicks on the timer
	// in the main window
	public TimerEditor(long elapsedTime, PlaytestScreen parent) 
	{
		this();

		this.parent = parent; 

		// Convert elapsedTime to a 00:00:00 format with minutes, seconds and milliseconds
		String time = String.format("%02d:%02d:%02d", elapsedTime / 3600000, (elapsedTime / 60000) % 60000, (elapsedTime / 1000) % 60);
		txtTimer.setText(time);
	}

	/**
	 * Create the frame.
	 */
	public TimerEditor() {
		setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
		setBounds(100, 100, 450, 300);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setResizable(false);

		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		txtTimer = new JTextField();
		txtTimer.setBounds(40, 74, 258, 93);
		contentPane.add(txtTimer);
		txtTimer.setColumns(10);
		
		JButton btnReset = new JButton("Reset");
		btnReset.setBounds(310, 117, 117, 29);
		contentPane.add(btnReset);
		
		JButton btnSetTimer = new JButton("Set");
		btnSetTimer.setBounds(176, 192, 117, 29);
		contentPane.add(btnSetTimer);
		
		JLabel lblTitle = new JLabel("Edit Timer");
		lblTitle.setBounds(176, 32, 117, 16);
		contentPane.add(lblTitle);
	}
}
